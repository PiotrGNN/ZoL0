[pytest]
# Test discovery and execution
testpaths = data/tests
python_files = test_*.py
python_classes = Test* *Tests *TestCase
python_functions = test_*

# Coverage configuration
addopts = -v --cov=data --cov-report=term-missing --cov-report=html --cov-fail-under=20

# Test categories
markers =
    unit: Unit tests
    integration: Integration tests
    smoke: Smoke tests for critical functionality
    slow: marks tests as slow (deselect with '-m "not slow"')
    security: Security-related tests
    api: API integration tests
    critical: marks tests as critical for trading functionality
    e2e: End-to-end workflow tests
    load: Load testing scenarios
    performance: Performance testing
    benchmark: marks tests that measure performance
    order: Order-related tests
    asyncio: Asynchronous tests

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeouts and performance
timeout = 300
junit_family = xunit2

# Configure test paths
norecursedirs = 
    .git
    .tox
    .env
    dist
    build
    migrations
    venv
    __pycache__

# Custom test settings
env =
    TEST_MODE=True
    LOG_LEVEL=INFO
    MOCK_EXCHANGE=True