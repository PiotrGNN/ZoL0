name: Docker Build & Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  buildx-multiarch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.multi
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/api:${{ github.sha }}
            ghcr.io/${{ github.repository }}/ui:${{ github.sha }}
          target: runtime-py

      - name: Build and push UI image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.multi
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/ui:${{ github.sha }}
          target: nginx

      - name: Trivy scan
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          image-ref: ghcr.io/${{ github.repository }}/api:${{ github.sha }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL,HIGH

      - name: Grype scan
        uses: anchore/scan-action@v3
        with:
          image: ghcr.io/${{ github.repository }}/api:${{ github.sha }}
          fail-build: true
          severity-cutoff: critical

      - name: Generate SBOM (CycloneDX)
        uses: CycloneDX/gh-action-generate-sbom@v2
        with:
          path: .
          output: cyclonedx.json

      - name: Cosign sign image
        uses: sigstore/cosign-installer@v3
      - run: cosign sign --yes ghcr.io/${{ github.repository }}/api:${{ github.sha }}
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: cyclonedx.json

      - name: Upload provenance
        uses: actions/upload-artifact@v4
        with:
          name: provenance
          path: provenance.json
