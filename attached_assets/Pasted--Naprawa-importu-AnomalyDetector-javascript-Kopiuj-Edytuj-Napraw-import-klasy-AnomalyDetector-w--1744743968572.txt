ğŸ”§ Naprawa importu AnomalyDetector
javascript
Kopiuj
Edytuj
Napraw import klasy `AnomalyDetector` w pliku `ai_models/anomaly_detection.py`, tak aby moÅ¼na jÄ… byÅ‚o poprawnie zaimportowaÄ‡ z zewnÄ…trz (`from ai_models.anomaly_detection import AnomalyDetector`). Upewnij siÄ™, Å¼e klasa jest poprawnie zdefiniowana i dodana do `__all__` lub dostÄ™pna bezpoÅ›rednio.
ğŸ§ª Naprawa importu ModelTester
javascript
Kopiuj
Edytuj
Upewnij siÄ™, Å¼e klasa `ModelTester` w pliku `python_libs/model_tester.py` jest poprawnie zaimplementowana i moÅ¼liwa do importowania z `from python_libs.model_tester import ModelTester`. JeÅ›li nie jest, popraw eksport tej klasy.
ğŸ§  Dodanie compile() do modelu Keras Sequential
css
Kopiuj
Edytuj
W pliku `ai_models/reinforcement_learning.py`, znajdÅº klasÄ™, ktÃ³ra tworzy model `Sequential`, i dodaj metodÄ™ `compile()` z odpowiednimi parametrami (np. loss, optimizer). ZrÃ³b to przed wywoÅ‚aniem `fit()`, aby uniknÄ…Ä‡ bÅ‚Ä™du: "You must call compile() before using the model."
ğŸ’¾ Zapis / odczyt .pkl dla RandomForestRegressor
go
Kopiuj
Edytuj
W pliku `model_training.py`, dodaj logikÄ™:
1. JeÅ›li istnieje zapisany model `.pkl`, zaÅ‚aduj go.
2. JeÅ›li nie, wytrenuj model, zapisz do `.pkl` i uÅ¼yj go.
Zadbaj o przechowywanie modelu z timestampem i opcjonalnie dopasowanie cech (`feature_names_in_`).
ğŸ•’ Retraining tylko przy nowych danych
css
Kopiuj
Edytuj
Dodaj porÃ³wnanie timestampu danych (np. pliku .csv / cache / danych z API) z timestampem modelu (np. z pliku `.pkl`). JeÅ›li dane sÄ… nowsze â€“ trenuj model i nadpisz `.pkl`. W przeciwnym wypadku zaÅ‚aduj istniejÄ…cy model. UÅ‚atwi to automatyczne, oszczÄ™dne aktualizacje.
ğŸ§¹ Dodanie trybu --clean i --backup do CLI
markdown
Kopiuj
Edytuj
W `manage_ai_models.py`, dodaj wsparcie dla trybÃ³w CLI:
- `--clean` â€“ usuwa uszkodzone lub nieczytelne pliki modeli (`.pkl`).
- `--backup` â€“ kopiuje wszystkie modele `.pkl` do folderu `backups/` z timestampem.
UÅ¼yj argparse i moduÅ‚u os/pathlib.
ğŸ“Š WyÅ›wietlanie accuracy w tabeli --list
javascript
Kopiuj
Edytuj
W trybie `--list` w `manage_ai_models.py`, dodaj odczyt pliku `model_metadata.json` i doÅ‚Ä…cz `accuracy` dla kaÅ¼dego modelu w tabeli wynikÃ³w. WyÅ›wietl teÅ¼ rozmiar pliku i datÄ™ ostatniej modyfikacji. JeÅ›li brak `accuracy` â€“ pokaÅ¼ `N/A`.
