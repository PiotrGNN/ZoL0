## 🤖💡 Superprompt: Pełna Diagnostyka, Naprawa i Optymalizacja Inteligentnego Systemu Tradingowego (All-in-One – Replit Ready)

### 🎯 Cel:
W jednym przebiegu zoptymalizuj, napraw i udoskonal cały system tradingowy (w tym moduły AI/ML), tak aby był:
- wolny od błędów,
- maksymalnie wydajny,
- gotowy do natychmiastowego uruchomienia na Replit,
- zgodny z dobrymi praktykami inżynierii oprogramowania oraz realiami rynkowymi.

---

### 🧠 Co masz zrobić:

1. **Przeanalizuj cały projekt – linijka po linijce**:
   - Wykryj i napraw wszelkie błędy wykonania, logiczne, importowe i strukturalne.
   - Upewnij się, że każda strategia i warunek otwarcia/zamknięcia pozycji działa zgodnie z założeniem.

2. **Zoptymalizuj moduły AI/ML**:
   - Zweryfikuj modele predykcyjne (np. LSTM, XGBoost, itp.): dane, preprocessing, trening, predykcje.
   - Sprawdź jakość danych, nadmierne dopasowanie, metryki skuteczności i logikę wykorzystania modelu.
   - Upewnij się, że integracja modelu z tradingiem jest stabilna i bezpieczna.

3. **Popraw i uporządkuj cały kod**:
   - Zastosuj dobre praktyki (czytelne nazwy, DRY, modularność, odporność na błędy).
   - Usuń zbędny, powielony lub przestarzały kod.
   - Uprość złożone fragmenty i zoptymalizuj pętle oraz przetwarzanie danych.

4. **Zadbaj o środowisko uruchomieniowe – pełna automatyzacja**:
   - Wygeneruj `requirements.txt` (lub `package.json`) z pełną listą zależności.
   - Dodaj plik `.replit` z poleceniem startowym (`run = "python main.py"` lub odpowiednim).
   - Jeśli trzeba, skonfiguruj `replit.nix` dla zaawansowanych zależności (np. `ta-lib`, `torch`, `xgboost`).

5. **Zintegruj narzędzia developerskie**:
   - Skonfiguruj i uruchom linter (`flake8`, `pylint`), formatter (`black`) i testy (`pytest`).
   - Zadbaj o logging, alerty oraz odporność na błędy zewnętrzne (np. API offline, złe dane).

6. **Zadbaj o gotowość produkcyjną i testową**:
   - Uruchom testy jednostkowe i integracyjne.
   - Wygeneruj przykładowy backtest oraz uruchomienie na danych historycznych.
   - Dodaj README z opisem działania i instrukcją użycia (dla Replit i poza nim).

---

### 📦 Oczekiwany efekt:

- Kompletna, naprawiona, zoptymalizowana i w pełni funkcjonalna wersja systemu tradingowego.
- Sprawne i skuteczne wykorzystanie AI w przewidywaniu ruchów rynkowych.
- Gotowe środowisko, które uruchamia się natychmiast po wejściu na Replit.
- Przejrzysty, modularny, bezpieczny i łatwy do dalszego rozwijania kod.

---

### ✅ Checklista końcowa (Replit-ready):

- [ ] Kod działa natychmiast po kliknięciu „Run” na Replit?
- [ ] Modele AI są poprawnie załadowane i używane?
- [ ] Czy linter i formatter przechodzą bez błędów?
- [ ] Czy projekt nie przekracza limitów Replit (czas, pamięć, połączenia)?
- [ ] Czy struktura projektu jest zrozumiała i udokumentowana?

---

🔁 **Zastosuj wszystko w jednym przebiegu. Zweryfikuj, napraw i przygotuj kod gotowy do działania na Replit od razu po wklejeniu.**
