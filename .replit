
run = "python main.py"
language = "python3"
hidden = [".gitignore", ".config", "**/__pycache__", "**/.mypy_cache", "**/*.pyc"]
modules = ["pytz-2022.1:v1-20220323-3ba6212", "pytest-6.2.5:v1-20220617-19ea357"]

[nix]
channel = "stable-22_05"

[env]
PYTHONPATH = "/home/runner/${REPL_SLUG}"
PATH = "${PATH}:${REPL_HOME}/.config/npm/node_global/bin"
PIP_NO_BINARY = "ta-lib"

[packager]
language = "python3"
ignoredPackages = ["unit_tests"]

  [packager.features]
  packageSearch = true
  guessImports = true
  enabledForHosting = false

[unitTest]
language = "python3"

[debugger]
support = true

  [debugger.interactive]
  transport = "localhost:0"
  startCommand = ["dap-python", "main.py"]

    [debugger.interactive.integratedAdapter]
    dapTcpAddress = "localhost:0"

    [debugger.interactive.initializeMessage]
    command = "initialize"
    type = "request"

      [debugger.interactive.initializeMessage.arguments]
      adapterID = "debugpy"
      clientID = "replit"
      clientName = "replit.com"
      columnsStartAt1 = true
      linesStartAt1 = true
      locale = "en-us"
      pathFormat = "path"
      supportsInvalidatedEvent = true
      supportsProgressReporting = true
      supportsRunInTerminalRequest = true
      supportsVariablePaging = true
      supportsVariableType = true

    [debugger.interactive.launchMessage]
    command = "launch"
    type = "request"
    
      [debugger.interactive.launchMessage.arguments]  
      args = []
      cwd = "."
      console = "externalTerminal"
      debugOptions = []
      program = "main.py"
      request = "launch"
      type = "python"

[languages]

[languages.python3]
pattern = "**/*.py"

[languages.python3.languageServer]
start = "pylsp"

[deployment]
run = ["sh", "-c", "python main.py"]
deploymentTarget = "cloudrun"

[workflows]
runButton = "Run"

[[workflows.workflow]]
name = "Run"
author = 31819671
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 main.py"

[[workflows.workflow]]
name = "Test Models"
author = 31819671
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 test_models.py"
